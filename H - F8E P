problem:
/*
H - F8E P
You are given an array of n integer numbers a0, a1, ..., an - 1. Find the distance between two closest (nearest) minimums in it. It is guaranteed that in the array a minimum occurs at least two times.

Input
The first line contains positive integer n (2 ≤ n ≤ 105) — size of the given array. The second line contains n integers a0, a1, ..., an - 1 (1 ≤ ai ≤ 109) — elements of the array. It is guaranteed that in the array a minimum occurs at least two times.

Output
Print the only number — distance between two nearest minimums in the array.
Input
2
3 3
output
1

Input
3
5 6 5
Output
2

input
9
2 1 3 5 4 1 2 3 1
output 
3
*/



//Solution:

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int INF = 1e9;

int main() {
    int n;
    cin >> n;

    vector<int> a(n);
    int min_val = INF;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        min_val = min(min_val, a[i]);
    }

    int min_dist = INF;
    int prev_pos = -INF;
    for (int i = 0; i < n; i++) {
        if (a[i] == min_val) {
            min_dist = min(min_dist, i - prev_pos);
            prev_pos = i;
        }
    }

    cout << min_dist << endl;

    return 0;
}
